1|What is encapsulation in object-oriented programming?|Binding data and methods that operate on the data into a single unit.|Deriving a new class from an existing class|Hiding the implementation details from users|Overriding a method in the base class|0|Easy|Encapsulation
2|Which of the following best achieves encapsulation in C++?|Private data members with public access functions|Public data members with private functions|Global variables used inside a class|Friend functions accessing public data|0|Medium|Encapsulation
3|Which access specifier is mainly used to implement encapsulation?|Public|Private|Protected|Global|1|Easy|Encapsulation
4|Why is encapsulation useful in OOP?|Improves performance|Makes code less readable|Protects object integrity by preventing unauthorized access|Allows global variables to be accessed anywhere|2|Medium|Encapsulation
5|What is the main purpose of inheritance in OOP?|Allows creating classes that are unrelated|Enables one class to inherit properties of another|Combines multiple functions into one|Hides data from the user|1|Easy|Inheritance
6|What are the types of inheritance in C++?|Single, Multiple, Multilevel, Hierarchical|Only Single Inheritance is supported|Only Hierarchical Inheritance is used|Private Inheritance is the only type in C++|0|Medium|Inheritance
7|Which statement about inheritance in C++ is true?|Derived class cannot override base class methods|Private members of base class are directly accessible in derived class|Public and protected members of base class are inherited|A derived class cannot have its own methods|2|Medium|Inheritance
8|Why is inheritance important in object-oriented programming?|Inheritance improves encapsulation|Inheritance breaks the IS-A relationship|Inheritance allows code reuse|Inheritance is not allowed in C++|2|Hard|Inheritance
9|What does polymorphism mean in OOP?|One name, multiple forms|Many classes, one function|Overloading of constructors only|Binding data and functions|0|Easy|Polymorphism
10|Which C++ features enable compile-time polymorphism?|Function overloading and operator overloading|Inheritance only|Constructor chaining|Encapsulation|0|Medium|Polymorphism
11|Which mechanism supports runtime polymorphism in C++?|Static binding at runtime|Virtual functions used in base classes|Constructor overloading|Inline functions|1|Medium|Polymorphism
12|What is a key benefit of using polymorphism?|Polymorphism allows overriding private members|Polymorphism can cause ambiguity|Polymorphism helps create flexible and reusable code|Polymorphism eliminates need for inheritance|2|Hard|Polymorphism
